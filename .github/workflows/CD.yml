name: Continuous Deployment
permissions:
  contents: read

on:
  release:
    types: [published]

env:
  configuration: Release

jobs:

  validate-tag:
    name: Validate tag
    runs-on: ubuntu-latest

    env:
      tag: ${{ github.event.release.tag_name }}

    steps:
      - name: Install Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Install semver
        run: npm install semver

      - name: Validate tag
        uses: actions/github-script@v8
        with:
          script: |
            const semver = require('semver');
            const tag = process.env.tag;
            if (!semver.valid(tag)) {
              throw new Error(`Tag '${tag}' is not a valid semver version`);
            }

      - name: Validate tag increment
        uses: actions/github-script@v8
        with:
          script: |
            const semver = require('semver');
            const tag = process.env.tag;
            const previousTag = await github.rest.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 2
            }).then(tags => tags.data[1]?.name);
            if (!previousTag) {
              return;
            }
            if (!semver.gt(tag, previousTag)) {
              throw new Error(`Tag '${tag}' is not greater than previous tag '${previousTag}'`);
            }
            console.log(`Tag '${tag}' is greater than previous tag '${previousTag}'`);

  invalid-release:
    name: Remove invalid release
    runs-on: ubuntu-latest
    needs: [validate-tag]
    if: ${{ failure() }}
    permissions:
      contents: write

    env:
      tag: ${{ github.event.release.tag_name }}

    steps:
      - name: Delete release
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.repos.deleteRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id
            });

      - name: Delete tag
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/${process.env.tag}`
            });

  publish:
    name: Publish to NuGet
    runs-on: ubuntu-latest
    needs: [validate-tag]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: '6.x'

      - name: Run GitVersion
        uses: gittools/actions/gitversion/execute@v4.1.0
        with:
          updateProjectFiles: true

      - name: Build
        run: dotnet build ./sources/EngageLabs.MinimalApi/EngageLabs.MinimalApi.csproj --configuration ${{ env.configuration }} --no-restore

      - name: Create NuGet package
        run: dotnet pack ./sources/EngageLabs.MinimalApi/EngageLabs.MinimalApi.csproj --configuration ${{ env.configuration }} --no-build --no-restore --output ./nuget

      - name: Publish NuGet package
        run: dotnet nuget push ./nuget/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

